Query a ser desenvolvida - Etapa 2:

"Quais foram os top 5 trajetos mais vendidos. Indicar os aeroportos que pertencem a esse trajeto e qual a capacidade média de bagagem dos aviões que foram utilizados."


feedback
    Atributos dependentes, não está claro o motivo (dentro de aeroporto), CPF x ID passageiro - OK

    Aeroporto pode não ter nenhuma atendente? Estranho. - OK

    Poderiam ter explorado entidade fraca - OK

    Entidade cidade seria atributo e  trajeto serviria mais como atributos da relação entre bilhete e voo


Os alunos devem descrever todas as regras de transformação aplicadas sobre o esquema ER original para derivação do esquema relacional correspondente. Deve-se explicitar como cada entidade, relacionamento, atributo e hierarquia de generalização foi transformado em elementos do modelo relacional, e o porquê da estratégia escolhida. 
    As meras descrições textuais das tabelas resultantes não são consideradas regras de transformação.
Este esquema deve ser implementado usando o SGBD PostgreSQL. Devem ser inseridas um mínimo de instâncias interessantes para cada relação, de modo que se compreenda bem o UdD, e possa-se ainda detectar eventuais incorreções na modelagem. 
    A consulta solicitada deve ser implementada, e os alunos devem colocar instâncias significativas em sua base de dados, de forma que toda consulta retorne pelo menos duas instâncias.

Critérios de avaliação: 
    correção e melhoria da descrição e da modelagem correspondente, projeto relacional (regras de mapeamento), implementação (escolha de tabelas e construtores apropriados).


Material a ser entregue pelos grupos 
ETAPA 2:
- 1 Arquivo .pdf contendo
    - Material da Etapa 1 onde constam as correções feitas pelo professor - OK

    - Mapeamento para relacional (StarUML) - OK
        com as regras aplicadas no esquema conceitual para geração de cada relação para cada entidade, relacionamento, hierarquia de generalização. - OK

    - DDL correspondente à implementação das relações em SQL usando o SGBD PostgreSQL
        e comandos de inserção de dados.

    - Para a consulta definida pelo professor, enunciado em português - OK
        implementação equivalente em SQL, usando o SGBD PostgreSQL - OK
        e resultados da consulta. - OK


dicionário de dados é um plus
 - já explica a tradução do MER ao Diagrama de Classes

assento: agora atributo da relação entre bilhete e voo


Viagem  :: v => Trajeto -> [Bilhete] -> Cliente -> v
Bilhete :: b => Assento -> Voo -> b

cliente :: c => CPF -> Passaporte -> c

cliente compra viagem 
cliente compra trajeto ((GRU, LIS), (LIS, LHR))
trajeto composto de bilhetes
bilhete relaciona voo,

Seu objetivo é a intermediação tanto do processo de compra de bilhetes pelos passageiros quanto da distribuição de voos e alocação da equipe necessária a eles. É esperado que nosso sistema seja capaz de abarcar a inclusão de novos passageiros, voos, trajetos e funcionários; a consulta de voos por passageiro, por funcionário e por aeroporto.

No caso estudado pela equipe, há a possibilidade de um aeroporto não apresentar atendentes da companhia. Isso se deve a que nosso modelo se refere a apenas uma companhia aérea, que como tal, pode ou não alocar atendentes que a representem em um aeroporto, mas de modo algum controla as operações de quaisquer aeroportos e, por isso, sua ausência em algum deles é totalmente compreensível e não implica a inexistência de atendimento próprio ou de outras companhias no local.

Como indicado pela professora, já não fizemos o uso de ids sintéticos para as entidades, logo nos aproveitamos de dados únicos: CPF e passaporte, por exemplo, para identificar cada tupla.

Sobre a modelagem de entidades fracas, agora temos as principais entidades relacionadas à compra como fracas: compra depende da identificação do comprador e do trajeto comprado, trajeto este que, por sua vez, depende inteiramente dos aeroportos origem e destino que o compõem, assim como o bilhete se identifica pela combinação de uma compra e um voo.  

bilhete também possui atributo preço

voo 123
aeroporto GRU
portão B234
hora 2020-11-10.18:30+00:00

voo 222
aeroporto SSA
portão A115
hora 2020-11-10.22:40+00:00

exemplos:
um mesmo voo para vários trajetos (sozinho e parte de uma viagem com escalas)

Como passageiro, quero comprar um trajeto entre duas cidades, ainda que não seja um voo só

a cidade nos pareceu de importância grande o suficiente para merecer uma entidade própria, além de garantir menor duplicidade de dados. Dado que, por sua relação de dependência funcional com o atributo país, acarretaria em uma dependência alheia à chave primária da entidade aeroporto.

(origem, destino) como pkey de trajeto -> garante que, ao referenciar um trajeto, não só há referência a dois aeroportos existentes, como também é o caso de que existe um trajeto cadastrado com essa mesma combinação de (origem, destino)
    análogo para piloto, comissário e atendente (cpf como pkey própria e fkey referenciando funcionário)

correção comissario e atendente
  cpf basta ser fkey e UNIQUE, não precisa ser pkey

